	package trapockage;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import SideBar.ShowText;

public class TralationGui extends JFrame {

	/**
	 * 翻译Gui
	 */
	private static final long serialVersionUID = -3924685216407329361L;

	private Translation translation;
	private int flag = 1;
	private int tra_flag = 0;
	private JButton submitbtn = new JButton("提交");
	private JButton clearbtn = new JButton("清空");

	@SuppressWarnings({ "rawtypes", "unchecked" })
	public TralationGui() throws IOException {

		this.setLayout(null);
		this.add(new ShowText(20, 2, 150, 30, "请输入翻译文本：", new Color(0, 0, 0)));
		this.add(new ShowText(360, 2, 150, 30, "输出结果：", new Color(0, 0, 0)));

		JTextArea inputtext = new JTextArea();
		inputtext.setLineWrap(true);
		inputtext.setLayout(null);
		inputtext.setFont(new Font("微软雅黑", Font.PLAIN, 15));
		JScrollPane inputjsp = new JScrollPane(inputtext);
		inputjsp.setBounds(10, 30, 230, 190);
		inputjsp.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

		JTextArea outputtext = new JTextArea();
		outputtext.setLineWrap(true);
		outputtext.setLayout(null);
		outputtext.setEditable(false);
		outputtext.setFont(new Font("微软雅黑", Font.PLAIN, 15));
		JScrollPane outputjsp = new JScrollPane(outputtext);
		outputjsp.setBounds(355, 30, 230, 190);
		outputjsp.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);

		JComboBox Tra_box = new JComboBox();
		Tra_box.setBounds(245, 35, 100, 25);
		Tra_box.addItem("谷歌翻译");
		Tra_box.addItem("金山词霸");
		Tra_box.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {

				if (e.getItem() == "谷歌翻译") {
					tra_flag = 0;
				} else if (e.getItem() == "金山词霸") {
					tra_flag = 1;
				}
			}
		});

		JComboBox comboBox = new JComboBox();
		comboBox.setBounds(245, 65, 100, 25);
		comboBox.addItem("中译英");
		comboBox.addItem("中译日");
		comboBox.addItem("英译中");
		comboBox.addItem("英译日");
		comboBox.addItem("日译中");
		comboBox.addItem("日译英");

		comboBox.addItemListener(new ItemListener() {

			@Override
			public void itemStateChanged(ItemEvent e) {
				if (e.getItem() == "中译英") {
					flag = 1;
				} else if (e.getItem() == "中译日") {
					flag = 3;
				} else if (e.getItem() == "英译中") {
					flag = 2;
				} else if (e.getItem() == "英译日") {
					flag = 3;
				} else if (e.getItem() == "日译中") {
					flag = 2;
				} else if (e.getItem() == "日译英") {
					flag = 1;
				}
			}
		});

		TraHistory.createTxt();
		submitbtn.setBounds(245, 95, 100, 25);
		submitbtn.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {

				if (inputtext.getText().length() == 0) {
					outputtext.setText("输入为空,请重试！");
				} else {
					translation = new Translation(inputtext.getText(), flag, tra_flag);
					if (translation.Result.substring(1).length() != 0) {
						outputtext.setText(translation.Result.substring(1));
						TraHistory.writeTxt(new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(new Date()) + " -->  "
								+ inputtext.getText() + "  :  " + outputtext.getText() + "\n");
					} else {
						outputtext.setText("翻译无结果");
					}

				}
			}
		});
		clearbtn.setBounds(245, 125, 100, 25);
		clearbtn.addActionListener(new ActionListener() {

			@Override
			public void actionPerformed(ActionEvent e) {
				inputtext.setText("");
				outputtext.setText("");
			}
		});

		this.add(Tra_box);
		this.add(comboBox);
		this.add(inputjsp);
		this.add(outputjsp);
		this.add(clearbtn);
		this.add(submitbtn);
		this.setTitle("即时翻译-.-!  ");
		this.setSize(600, 290);
		this.setLocationRelativeTo(null);
		this.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
		this.setResizable(false);
		this.setVisible(true);
	}

}
